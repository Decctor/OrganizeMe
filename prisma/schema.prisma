// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
    relationMode = "prisma"
}
model Categories {
    id Int @id @default(autoincrement())
    name String
    user User @relation(fields: [userId], references: [id])
    userId String
}
model Budgets {
    id Int @id @default(autoincrement())
    period String 
    value Float 
    category String 
    user User @relation(fields: [userId], references: [id])
    userId String
    }
model Methods {
    id Int @id @default(autoincrement())
    name String 
    user User @relation(fields: [userId], references: [id])
    userId String
}
model User  {
    id String   @id @default(cuid())
    name String 
    email String 
    password String
    categories  Categories[]
    methods Methods[]
    expenses Expenses[]
    earnings Earnings[]
    budgets Budgets[]
    activities Activities[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
model Expenses {
    id String @id @default(cuid())
    description String 
    category String 
    method String 
    value Float 
    purchaseDate DateTime @default(now())
    paymentDate DateTime @default(now())
    installments Int?
    installmentIdentifier Int?
    user User @relation(fields: [userId], references: [id])
    userId String
}
model Earnings {
    id String @id @default(cuid())
    description String 
    value Float
    date DateTime @default(now())
    user User @relation(fields: [userId], references: [id])
    userId String
}
model Activities {
    id String @id @default(cuid())
    title String 
    items ActivityItem[]
    user User @relation(fields: [userId], references: [id])
    userId String
    dueDate DateTime? @default(now())
    createdAt DateTime @default(now())
    concludedAt DateTime @default(now())
}
model ActivityItem {
    id String @id @default(cuid())
    description String 
    done Boolean @default(false)
    activity Activities @relation(fields: [activityId], references: [id])
    activityId String
}
model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime 
}
